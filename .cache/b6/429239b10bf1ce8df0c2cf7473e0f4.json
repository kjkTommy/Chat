{"id":"node_modules/date-fns/eachWeekOfInterval.js","dependencies":[{"name":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\package.json","includedInParent":true,"mtime":1717857937106},{"name":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1717855665787},{"name":"./addWeeks.js","loc":{"line":3,"column":21,"index":84},"parent":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\eachWeekOfInterval.js","resolved":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\addWeeks.js"},{"name":"./startOfWeek.js","loc":{"line":4,"column":22,"index":124},"parent":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\eachWeekOfInterval.js","resolved":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\startOfWeek.js"},{"name":"./toDate.js","loc":{"line":5,"column":22,"index":167},"parent":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\eachWeekOfInterval.js","resolved":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\toDate.js"}],"generated":{"js":"\"use strict\";\nexports.eachWeekOfInterval = eachWeekOfInterval;\nvar _index = require(\"./addWeeks.js\");\nvar _index2 = require(\"./startOfWeek.js\");\nvar _index3 = require(\"./toDate.js\");\n\n/**\n * The {@link eachWeekOfInterval} function options.\n */\n\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of weeks from the week of the interval start to the week of the interval end\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * const result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\nfunction eachWeekOfInterval(interval, options) {\n  const startDate = (0, _index3.toDate)(interval.start);\n  const endDate = (0, _index3.toDate)(interval.end);\n\n  let reversed = +startDate > +endDate;\n  const startDateWeek = reversed\n    ? (0, _index2.startOfWeek)(endDate, options)\n    : (0, _index2.startOfWeek)(startDate, options);\n  const endDateWeek = reversed\n    ? (0, _index2.startOfWeek)(startDate, options)\n    : (0, _index2.startOfWeek)(endDate, options);\n\n  // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n\n  const endTime = +endDateWeek.getTime();\n  let currentDate = startDateWeek;\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+currentDate <= endTime) {\n    currentDate.setHours(0);\n    dates.push((0, _index3.toDate)(currentDate));\n    currentDate = (0, _index.addWeeks)(currentDate, step);\n    currentDate.setHours(15);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/date-fns/eachWeekOfInterval.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}}],"sources":{"node_modules/date-fns/eachWeekOfInterval.js":"\"use strict\";\nexports.eachWeekOfInterval = eachWeekOfInterval;\nvar _index = require(\"./addWeeks.js\");\nvar _index2 = require(\"./startOfWeek.js\");\nvar _index3 = require(\"./toDate.js\");\n\n/**\n * The {@link eachWeekOfInterval} function options.\n */\n\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of weeks from the week of the interval start to the week of the interval end\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * const result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\nfunction eachWeekOfInterval(interval, options) {\n  const startDate = (0, _index3.toDate)(interval.start);\n  const endDate = (0, _index3.toDate)(interval.end);\n\n  let reversed = +startDate > +endDate;\n  const startDateWeek = reversed\n    ? (0, _index2.startOfWeek)(endDate, options)\n    : (0, _index2.startOfWeek)(startDate, options);\n  const endDateWeek = reversed\n    ? (0, _index2.startOfWeek)(startDate, options)\n    : (0, _index2.startOfWeek)(endDate, options);\n\n  // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n\n  const endTime = +endDateWeek.getTime();\n  let currentDate = startDateWeek;\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+currentDate <= endTime) {\n    currentDate.setHours(0);\n    dates.push((0, _index3.toDate)(currentDate));\n    currentDate = (0, _index.addWeeks)(currentDate, step);\n    currentDate.setHours(15);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n"},"lineCount":80}},"error":null,"hash":"ca8dbe9d4110cb3eca182270ef047386","cacheData":{"env":{}}}