{"id":"node_modules/date-fns/isYesterday.js","dependencies":[{"name":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\package.json","includedInParent":true,"mtime":1717857937106},{"name":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1717855665787},{"name":"./constructNow.js","loc":{"line":3,"column":21,"index":70},"parent":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\isYesterday.js","resolved":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\constructNow.js"},{"name":"./isSameDay.js","loc":{"line":4,"column":22,"index":114},"parent":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\isYesterday.js","resolved":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\isSameDay.js"},{"name":"./subDays.js","loc":{"line":5,"column":22,"index":155},"parent":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\isYesterday.js","resolved":"C:\\Users\\vk221\\OneDrive\\Desktop\\work\\FR7\\MyTasks\\node_modules\\date-fns\\subDays.js"}],"generated":{"js":"\"use strict\";\nexports.isYesterday = isYesterday;\nvar _index = require(\"./constructNow.js\");\nvar _index2 = require(\"./isSameDay.js\");\nvar _index3 = require(\"./subDays.js\");\n\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nfunction isYesterday(date) {\n  return (0, _index2.isSameDay)(\n    date,\n    (0, _index3.subDays)((0, _index.constructNow)(date), 1),\n  );\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/date-fns/isYesterday.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/date-fns/isYesterday.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/date-fns/isYesterday.js":"\"use strict\";\nexports.isYesterday = isYesterday;\nvar _index = require(\"./constructNow.js\");\nvar _index2 = require(\"./isSameDay.js\");\nvar _index3 = require(\"./subDays.js\");\n\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nfunction isYesterday(date) {\n  return (0, _index2.isSameDay)(\n    date,\n    (0, _index3.subDays)((0, _index.constructNow)(date), 1),\n  );\n}\n"},"lineCount":33}},"error":null,"hash":"051df83fd53c4d87672efd1d04a62c70","cacheData":{"env":{}}}